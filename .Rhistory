left_who <- who_long %>%
left_join(population, by = 'country', 'year')
left_who
# your code here
left_who <- left_who %>%
separate(age, into = c('min_age', 'max_age'), sep = -2)
# your code here
left_who <- left_who %>%
mutate(max_age = replace(max_age, max_age == 65 , 'Inf'))%>%
mutate_at(c('min_age'), ~na_if(.,'')) %>%
mutate_at(c('min_age'), ~replace_na(., '65'))
# your code here
plot_who <- left_who %>%
group_by(diagnosis, gender) %>%
summarize(count = sum(!is.na(count)), .groups = 'drop')
#your code here
options(scipen = 999)
ggplot(plot_who, aes(x=gender, y=count, group = diagnosis, fill = gender)) +
geom_col()+
labs(x='Gender',
y='Count',
Title = 'Count of Diagnosis by Gender') +
facet_grid(~diagnosis) +
scale_y_continuous(labels = scales::comma)
# your code here
df_who <- left_who %>%
group_by(year.y, gender, diagnosis) %>%
summarize(percentage = n() / nrow(left_who) * 100, .groups = 'drop', ) %>%
drop_na()
# your code here
ggplot(df_who, aes(x = year.y, y = percentage, group = gender, color = gender)) +
geom_line() +
facet_wrap(~diagnosis, ncol = 1) +
labs(x = "Year", y = "Percent of Population", color = "Gender", title = "Population Percentage by Diagnosis and Gender") +
theme_minimal()
# your code here
left_who <- left_who %>%
unite(age_range, min_age, max_age, sep = '-')
View(left_who)
# your code here
left_who <- left_who %>%
count(diagnosis, name = 'total_count') %>%
count(diagnosis, age_range, name = 'age_range_count')
# your code here
left_who <- left_who %>%
count(diagnosis, name = 'total_count') %>%
count(left_who, diagnosis, age_range, name = 'age_range_count')
left_who <- left_who %>%
count(diagnosis, age_range, name = 'age_range_count')
count(diagnosis, name = 'total_count')
perc_who <- left_who %>%
count(diagnosis, age_range, name = 'age_range_count')
View(perc_who)
left_who <- left_who %>%
count(diagnosis, name = 'total_count')
data(who)
data(population)
library(dplyr)
library(tidyr)
library(ggplot2)
#your code here
who_long <- who %>%
pivot_longer(cols = !c(country, iso2, iso3, year),
names_pattern = "new_?(.*)_(.)(.*)" ,
names_to = c('diagnosis','gender','age'),
values_to = 'count')
head(who_long)
# your code here
left_who <- who_long %>%
left_join(population, by = 'country', 'year')
left_who
# your code here
left_who <- left_who %>%
separate(age, into = c('min_age', 'max_age'), sep = -2)
# your code here
left_who <- left_who %>%
mutate(max_age = replace(max_age, max_age == 65 , 'Inf'))%>%
mutate_at(c('min_age'), ~na_if(.,'')) %>%
mutate_at(c('min_age'), ~replace_na(., '65'))
# your code here
plot_who <- left_who %>%
group_by(diagnosis, gender) %>%
summarize(count = sum(!is.na(count)), .groups = 'drop')
#your code here
options(scipen = 999)
ggplot(plot_who, aes(x=gender, y=count, group = diagnosis, fill = gender)) +
geom_col()+
labs(x='Gender',
y='Count',
Title = 'Count of Diagnosis by Gender') +
facet_grid(~diagnosis) +
scale_y_continuous(labels = scales::comma)
# your code here
df_who <- left_who %>%
group_by(year.y, gender, diagnosis) %>%
summarize(percentage = n() / nrow(left_who) * 100, .groups = 'drop', ) %>%
drop_na()
# your code here
ggplot(df_who, aes(x = year.y, y = percentage, group = gender, color = gender)) +
geom_line() +
facet_wrap(~diagnosis, ncol = 1) +
labs(x = "Year", y = "Percent of Population", color = "Gender", title = "Population Percentage by Diagnosis and Gender") +
theme_minimal()
# your code here
left_who <- left_who %>%
unite(age_range, min_age, max_age, sep = '-')
all_diagnosis_count <- left_who %>%
count(diagnosis, name = 'total_count')
View(all_diagnosis_count)
diagnosis_by_age_group <- left_who %>%
count(diagnosis, age_range, name = 'age_range_count')
View(diagnosis_by_age_group)
joined_who <- left_join(diagnosis_by_age_group, all_diagnosis_count, by = 'diagnosis')
View(joined_who)
joined_who <- joined_who %>%
mutate(percentage = age_group_count / total_count * 100)
joined_who <- joined_who %>%
mutate(percentage = age_range_count / total_count * 100)
ggplot(joined_who, aes(x = diagnosis, y = percentage, fill = age_rnage)) +
geom_col(position = "dodge") +
facet_wrap(~ age_range, ncol = 1) +
labs(x = "Diagnosis", y = "Percentage of Total", fill = "Age Range") +
theme_minimal()
ggplot(joined_who, aes(x = diagnosis, y = percentage, fill = age_range)) +
geom_col(position = "dodge") +
facet_wrap(~ age_range, ncol = 1) +
labs(x = "Diagnosis", y = "Percentage of Total", fill = "Age Range") +
theme_minimal()
View(plot_who)
View(left_who)
job_info <- read.csv("DSE5002/DSE5002/R_Project/data.csv"
.stringsAsFactor=False)
job_info <- read.csv("GitHub/DSE5002/DSE5002/R_Project/data.csv"
.stringsAsFactor=False)
job_info <- read.csv("GitHub/DSE5002/DSE5002/R_Project/data.csv"
,stringsAsFactor=False)
job_info <- read.csv("GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv"
,stringsAsFactor=False)
job_info <- read.csv("C:\Users\ben98\OneDrive\Desktop\Masters\GitHub\DSE5002\DSE5002\R_Project"
job_info <- read.csv("Users\ben98\OneDrive\Desktop\Masters\GitHub\DSE5002\DSE5002\R_Project\r_project_data.csv"
job_info <- read.csv("/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv"
,stringsAsFactor=False)
job_info <- read.csv("/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv")
job_info <- read.csv('/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info = read.csv('/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
library(readr)
r_project_data <- read_csv("R_Project/r _project_data.csv")
View(r_project_data)
job_info = read.csv('/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info = read.csv('/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info <- read.csv('/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info <- read.csv('Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info <- read.csv('Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info <- read.csv('Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/data.csv')
job_info <- read.csv('Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info <- read.csv('Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
job_info <- read.csv('Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/R_Project/r_project_data.csv')
View(r_project_data)
library(dplyr)
library(ggplot2)
library(tidyr)
us_data <- r_project_data[r_project_data[employee_residence]=US, ]
us_data <- r_project_data[r_project_data[employee_residence ] == US, ]
us_data <- r_project_data[r_project_data[employee_residence] == US, ]
us_data <- r_project_data[r_project_data$employee_residence] == 'US', ]
us_data <- r_project_data[r_project_data$employee_residence] == 'US']
us_data <- r_project_data[r_project_data$employee_residence] == 'US']]
us_data <- r_project_data[r_project_data$employee_residence == 'US']
us_data <- r_project_data[r_project_data$employee_residence == 'US', ]
non_us_data <- r_project_data[r_project_data$employee_residence != 'US', ]
View(non_us_data)
View(us_data)
ggplot(r_project_data,
aes(x = company_size, fill= company_size) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size'))
ggplot(r_project_data,
aes(x = company_size, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
barplot(r_project_data,
aes(x = company_size, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
salary_by_comp_size <- tapply(r_project_data$salary_in_usd, r_project_data$company_size, mean)
ggplot(salary_by_comp_size,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_by_comp_size fill= company_size)) +
ggplot(r_project_data,
aes(x = company_size, y= salary_by_comp_size, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_by_comp_size, fill= company_size)) +
geom_bar()+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
print(salary_by_comp_size)
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_col(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary by 1000s',
title = 'Salaries based on Company Size')
#
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
salary_by_comp_size_US <- tapply(us_data$salary_in_usd, us_data$company_size, mean)
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_boxplot(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
US_salary_by_comp_size <- tapply(us_data$salary_in_usd, us_data$company_size, mean)
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
us_salary_by_comp_size <- tapply(us_data$salary_in_usd, us_data$company_size, mean)
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
non_us_salary_by_comp_size <- tapply(non_us_data$salary_in_usd, non_us_data$company_size, mean
non_us_salary_by_comp_size <- tapply(non_us_data$salary_in_usd, non_us_data$company_size, mean)
non_us_salary_by_comp_size <- tapply(non_us_data$salary_in_usd, non_us_data$company_size, mean)
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
ggplot(non_us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
r_project_data <- r_project_data %>%
mutate(residence_group= ifelse(employee_residence== "US", "US", "Non-US"))
large_comp <- r_project_data[r_project_data$company_size== 'L', ]
med_comp <- r_project_data[r_project_data$company_size== 'M', ]
small_comp <- r_project_data[r_project_data$company_size== 'S', ]
options(scipen=999)
ggplot(large_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salary Comparision os US and Non-US residence by Experience Level for Large Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(med_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salary Comparision os US and Non-US residence by Experience Level for Medium Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(large_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salary Comparision os US and Non-US residence by Experience Level for Large Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(large_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salary Comparision os US and Non-US residence by Experience Level for Large Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(large_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salary Comparision of residence by Experience for Large Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(large_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salaries of Residence by Experience for Large Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(med_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salaries of Residence by Experience for Medium Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(small_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salaries of Residence by Experience for Small Companies') +
facet_grid( ~ experience_level)
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size')
ggplot(r_project_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size Worldwide')
ggplot(us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size in US')
ggplot(non_us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size for Non-US based Employees')
ggplot(non_us_data,
aes(x = company_size, y= salary_in_usd, fill= company_size)) +
geom_bar(stat = 'summary', fun= 'mean')+
labs(x = "Company Size",
y = 'Salary',
title = 'Salaries based on Company Size for Non-US Employees')
FT_employees <- r_project_data[r_project_data$employment_type == 'FT',]
large_comp <- FT_employeesa[FT_employees$company_size== 'L', ]
large_comp <- FT_employees[FT_employees$company_size== 'L', ]
med_comp <- FT_employees[FT_employees$company_size== 'M', ]
small_comp <- FT_employees[FT_employees$company_size== 'S', ]
options(scipen=999)
ggplot(large_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salaries of Residence by Experience for Large Companies') +
facet_grid( ~ experience_level)
options(scipen=999)
ggplot(med_comp, aes(x=residence_group, y=salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(x='Employee Residence', y = 'Salary (USD in Thousands)', title = 'Salaries of Residence by Experience for Medium Companies') +
facet_grid( ~ experience_level)
# Your code here
sales <- read.delim("DSE5002/Week_2/Data/sales1.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
# Your code here
sales <- read.delim("DSE5002/Week_2/Data/sales1.txt.txt/"
,stringsAsFactors=FALSE
,sep = "|"
)
# Your code here
sales <- read.delim("DSE5002/Week_2/Data/sales1.txt/"
,stringsAsFactors=FALSE
,sep = "|"
)
file.exists('C:\Users\ben98\OneDrive\Desktop\Masters\GitHub\DSE5002\DSE5002')
file.exists('C:\\Users\\ben98\\OneDrive\\Desktop\\Masters\\GitHub\\DSE5002\\DSE5002')
file.exists('C:\\Users\\ben98\\OneDrive\\Desktop\\Masters\\GitHub\\DSE5002\\DSE5002\\Week_2')
file.exists('C:\\Users\\ben98\\OneDrive\\Desktop\\Masters\\GitHub\\DSE5002\\DSE5002\\Week_2\\Data')
file.exists('C:\\Users\\ben98\\OneDrive\\Desktop\\Masters\\GitHub\\DSE5002\\DSE5002\\Week_2\\Data\\sales1.txt')
sales <- read.delim("DSE5002\\Week_2\\Data\\sales1.txt/"
,stringsAsFactors=FALSE
,sep = "|"
)
sales <- read.delim("DSE5002\\Week_2\\Data\\sales1.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
setwd(/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data)
setwd(Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data)
setwd(ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data)
setwd(//ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data)
setwd('C:/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002')
file.exists('C:\\Users\\ben98\\OneDrive\\Desktop\\Masters\\GitHub\\DSE5002\\DSE5002\\Week_2\\Data\\sales1.txt')
sales <- read.delim("DSE5002\\Week_2\\Data\\sales1.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
sales <- read.delim("C:\Users\ben98\OneDrive\Desktop\Masters\GitHub\DSE5002\DSE5002\Week_2\Data\sales1.txt"
sales <- read.delim("Users\ben98\OneDrive\Desktop\Masters\GitHub\DSE5002\DSE5002\Week_2\Data\sales1.txt"
sales <- read.delim("/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data/sales1.txt"
,stringsAsFactors=FALSE
,sep = "|"
)
sales <- read.delim("/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data/sales1.txt"
)
sales <- read.delim("/Week_2/Data/sales1.txt"
)
sales <- read.delim("/Week_2/Data/sales1.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.delim("/Week_2/Data/sales1.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.delim("/DSE5002/Week_2/Data/sales1.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.delim(sales.txt, "/DSE5002/Week_2/Data/sales1.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.delim('sales.txt', "/DSE5002/Week_2/Data/sales1.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.delim("/DSE5002/Week_2/Data/sales_pipe.txt.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
file.exists('C:\\Users\\ben98\\OneDrive\\Desktop\\Masters\\GitHub\\DSE5002\\DSE5002\\Week_2\\Data\\sales_pipe.txt')
sales <- read.delim("/Week_2/Data/sales_pipe.txt.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.delim("/Week_2/Data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
# Your code here
sales_pipe <- read.table("C:/Users/ben98/OneDrive/Desktop/Masters/GitHub/DSE5002/DSE5002/Week_2/Data/sales_pipe.txt", quote="\"", stringsAsFactors=TRUE)
# Your code here
sales <- read.delim("/Week_2/Data/sales_pipe"
,stringsAsFactors = FALSE
,sep = '|'
)
# Your code here
sales <- read.delim("/Week_2/Data/sales_pipe.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
# Your code here
sales <- read.delim("/Week_2/Data/sales.txt"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.csv("/Week_2/Data/sales.csv"
,stringsAsFactors = FALSE
,sep = '|'
)
sales <- read.csv("/Week_2/Data/sales.csv"
,stringsAsFactors = FALSE
)
library(readr)
sales <- read_csv("Week_2/Data/sales.csv")
View(sales)
# Your code here
colnames(sales)[1] <- "Row.ID"
# Your code here
library(lubridate)
sales$Ship.Date <- mdy(sales$Ship.Date)
# Your code here
library(lubridate)
sales$Ship.Date <- mdy(sales$Ship_Date)
sales <- read.csv("Week_2/Data/sales.csv"
,stringsAsFactors = FALSE
)
